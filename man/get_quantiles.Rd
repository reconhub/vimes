% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_quantiles.R
\name{get_quantiles}
\alias{get_quantiles}
\title{Get quantiles for a given probability distribution}
\usage{
get_quantiles(f, p, continuous = NULL, precision = 0.01,
  n_steps = 1000, maxit = 1000, ...)
}
\arguments{
\item{f}{A function returning the probability density function (for
\code{get_quantiles_pdf}) or the probability mass function (for
\code{get_quantiles_pmf}.}

\item{p}{A vector of probabilities.}

\item{continuous}{A logical indicating if the distribution computed by
\code{f} is continuous (i.e., a probability density function) or discrete
(i.e. a probability mass function). Automatically detected if the function
provided is an instance of \code{\link{fpaircase}}.}

\item{precision}{The size of the step used to discretise the continuous
distribution. Defaults to 0.01.}

\item{n_steps}{The number steps used to discretise the continuous
distribution. Defaults to 1000. Note that if \code{n_steps} intervals are
not enough to attain the largest value in \code{p}, batches of
\code{n_steps} are iteratively added.}

\item{maxit}{The maximum number of batches of \code{n_steps} considered.
Defaults to 1000. Avoids infinite looping when \code{p} is close to 1.}

\item{...}{Further arguments passed to the function \code{f}}
}
\description{
These functions approximate quantiles for a probability density function or
mass function given by a function \code{f}.
}
\examples{

## reference: exponential of rate 1
qexp(c(.4, .5, .95))

## approximation
get_quantiles(f = dexp, c(.4,.5,.95), TRUE)

## better precision
get_quantiles(f = dexp, c(.4,.5,.95), precision = 0.001, TRUE)


## example with fpaircase
f <- fpaircase("spatial", sd_spatial=10)
plot(f)
plot(f, xlim = c(0, 100))
plot(f, xlim = c(0, 100), pi = 0.4)

q <- get_quantiles(f, c(.9, .95, .99))
q
abline(v = q)


}
\author{
Anne Cori (a.cori@imperial.ac.uk) and Thibaut Jombart.
}
